p: Project = input;

list: output mean[string][int] of float;

date: time;

counter := visitor {
    before node: Statement -> {
        if(node.kind == StatementKind.TRY or node.kind == StatementKind.WITH)
            list[p.name][yearof(date)] << 1;
        else
            list[p.name][yearof(date)] << 0;
    }
};
            
visit(p, visitor{
    before node: CodeRepository -> {
        for (year: int = 22; year >= 0; year--){
            date = addyear(T"Dec 31, 2022, 10:00:00 AM", year);
            snapshot := getsnapshot(node, date);
            
            if (len(snapshot) > 0)
                foreach(i: int; def(snapshot[i]))
                    visit(snapshot[i], counter);
        }
    }    
});
